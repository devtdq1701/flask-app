version: '3.8'

services:
  flask:
    build:
      context: app
      dockerfile: Dockerfile
    container_name: flask
    image: flask-python
    restart: unless-stopped
    environment:
      APP_ENV: "prod"
      APP_DEBUG: "False"
      APP_PORT: 5000
      MONGODB_DATABASE: flaskdb
      MONGODB_USERNAME: quangtran
      MONGODB_PASSWORD: quang12345
      MONGODB_HOSTNAME: mongodb
    volumes:
      - ./app/data:/var/www
    depends_on:
      - mongodb
    networks:
      - flask-network
      - mongo-network

  mongodb:
    image: mongo:4.0.8
    container_name: mongodb
    restart: unless-stopped
    command: mongod --auth
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongodbuser
      MONGO_INITDB_ROOT_PASSWORD: quang12345
      MONGO_INITDB_DATABASE: flaskdb
      MONGODB_DATA_DIR: /data/db
      MONDODB_LOG_DIR: /dev/null
    volumes:
      - ./mongodb-data:/data/db
    networks:
      - mongo-network

  webserver:
    image: nginx
    container_name: webserver
    restart: unless-stopped
    environment:
      APP_ENV: "prod"
      APP_NAME: "webserver"
      APP_DEBUG: "false"
      SERVICE_NAME: "webserver"
    ports:
      - "80:80"
    volumes:
      - ./php-app/public:/var/www/php
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - flask
      - php-app
    networks:
      - flask-network
      - php-network

  php-app:
    build:
      context: ./php-app
      dockerfile: Dockerfile
    image: php-app
    container_name: php-app
    restart: unless-stopped
    working_dir: /var/www/php
    volumes:
      - ./php-app/public:/var/www/php
    depends_on:
      - mysql-db
    networks:
      - php-network
      - mysql-network

  mysql-db:
    image: mysql:8
    container_name: mysql-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: demo
      MYSQL_USER: quangtran
      MYSQL_PASSWORD: quang12345
    volumes:
      - ./mysql-data:/var/lib/mysql
    networks:
      - mysql-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:5
    container_name: phpmyadmin
    ports:
      - "8080:80"
    environment:
      PMA_HOST: mysql-db
    depends_on:
      - mysql-db
    networks:
      - mysql-network

networks:
  flask-network:
    driver: bridge
  mongo-network:
    driver: bridge
  php-network:
    driver: bridge
  mysql-network:
    driver: bridge

# volumes:
#   mongodbdata:
#     driver: local
#   appdata:
#     driver: local
